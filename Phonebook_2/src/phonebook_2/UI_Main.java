/*
 * UI_Main JFrame class
 * Used as the main UI class to display entries, search entries and access the
 * add entry UI
 */
package phonebook_2;

import java.util.ArrayList;
import javax.swing.DefaultListModel;

/**
 *
 * @author s6040531
 */
public class UI_Main extends javax.swing.JFrame 
{
    // ArrayList that contains a collection of all PB_record objects
    private static ArrayList<PB_record> entry_list;
    
    // ArrayList that contains a collection of search result PB_record objects
    private static ArrayList<PB_record> search_list;
    
    // DefaultListModel for the entries JList
    private DefaultListModel entries = new DefaultListModel();
    
    // DefaultListModel for the deatils JList
    private DefaultListModel details = new DefaultListModel();

    /**
     * Creates new form UI_Main
     * @param el
     */
    public UI_Main(ArrayList<PB_record> el) 
    {
        entry_list = el;
        initComponents();
        details_list.setEnabled(false);
        
        initCList(1);
    }
    
    /**
     * Alternate constructor for after searching
     * @param el
     * @param sl 
     */
    public UI_Main(ArrayList<PB_record> el, ArrayList<PB_record> sl)
    {
        entry_list = el;
        search_list = sl;
        initComponents();
        details_list.setEnabled(false);
        
        initCList(2);
    }
    
    /**
     * Initialises the entries JList
     * @param op
     */
    public void initCList(int op)
    {
        // Clears the model
        entries.clear();
        
        // Checks if normal or search display
        if(op == 1)
        {
            //Loops through each element in the array list and adds it to the model
            entry_list.forEach((e)->
            {
                entries.addElement(e.getfName() + " " + e.getsName() + " ~ " + e.getpNumber());
            });
        }
        else if(op == 2)
        {
            //Loops through each element in the array list and adds it to the model
            search_list.forEach((e)->
            {
                entries.addElement(e.getfName() + " " + e.getsName() + " ~ " + e.getpNumber());
            });
        }
        
        // Sets the list model so it can be displayed
        contact_list.setModel(entries);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contact_list = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        details_list = new javax.swing.JList<>();
        btn_add = new javax.swing.JButton();
        btn_search = new javax.swing.JButton();
        btn_clear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Phonebook", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 1, 12))); // NOI18N

        contact_list.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contacts", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 1, 11))); // NOI18N
        contact_list.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Entry 1", "Entry 2", "Entry 3", "Entry 4", "Entry 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        contact_list.setMaximumSize(new java.awt.Dimension(45, 200));
        contact_list.setMinimumSize(new java.awt.Dimension(45, 200));
        contact_list.setPreferredSize(new java.awt.Dimension(45, 200));
        contact_list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                contact_listValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(contact_list);

        details_list.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Contact Details", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Arial Black", 1, 11))); // NOI18N
        details_list.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        details_list.setMaximumSize(new java.awt.Dimension(45, 200));
        details_list.setMinimumSize(new java.awt.Dimension(45, 200));
        details_list.setPreferredSize(new java.awt.Dimension(45, 200));
        jScrollPane2.setViewportView(details_list);

        btn_add.setText("Add");
        btn_add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_addMouseClicked(evt);
            }
        });

        btn_search.setText("Search");
        btn_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_searchMouseClicked(evt);
            }
        });

        btn_clear.setText("Clear ");
        btn_clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_clearMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(btn_add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btn_search, javax.swing.GroupLayout.DEFAULT_SIZE, 246, Short.MAX_VALUE)
                    .addComponent(btn_clear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_add)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_search)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_clear))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * ListValueChanged event for contact_list
     * @param evt 
     */
    private void contact_listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_contact_listValueChanged
        
        // Clears the detail model
        details.clear();
        
        // Checks that a list item has been selected
        if(!contact_list.isSelectionEmpty())
        {
            // Checks that the value isnt' changing
            if(evt.getValueIsAdjusting() == false)
            {
                // Loops through each entry in the array list
                entry_list.forEach((e)-> 
                {

                    // Grabs the name and number for the current entry
                    String name = e.getfName() + " " + e.getsName();
                    String pNumber = e.getpNumber();

                    // Checks that the current entry matches the selected list item
                    if(contact_list.getSelectedValue().equals(name + " ~ " + pNumber))
                    {
                        // Grabs the rest of the entry details
                        String mNumber = e.getmNumber();
                        String wNumber = e.getwNumber();
                        String email = e.getEmail();

                        // Adds the entry details to the details model
                        details.addElement("Name : " + name);
                        details.addElement("Phone Number : " + pNumber);
                        details.addElement("Mobile Number : " + mNumber);
                        details.addElement("Work Number : " + wNumber);
                        details.addElement("Email Address : " + email);
                    }
                });
            }
            
            // Sets the details_list model
            details_list.setModel(details);
        }
    }//GEN-LAST:event_contact_listValueChanged

    /**
     * MouseClicked event for btn_add
     * @param evt 
     */
    private void btn_addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_addMouseClicked
        // Creates and displays the Add Entry UI, hides the current UI
        UI_Add_Entry add = new UI_Add_Entry(entry_list);
        add.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btn_addMouseClicked

    /**
     * MouseClicked event for btn_clear
     * @param evt 
     */
    private void btn_clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_clearMouseClicked
        //Clears the list selection and re-displays all entries 
        contact_list.clearSelection();
        initCList(1);
    }//GEN-LAST:event_btn_clearMouseClicked

    /**
     * MouseClicked event for btn_search
     * @param evt 
     */
    private void btn_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_searchMouseClicked
        // Creates and displays the Add Entry UI, hides the current UI
        UI_Search_Entry search = new UI_Search_Entry(entry_list);
        search.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btn_searchMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI_Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI_Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI_Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI_Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI_Main(entry_list).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_search;
    private javax.swing.JList<String> contact_list;
    private javax.swing.JList<String> details_list;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
